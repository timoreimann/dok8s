#!/bin/bash


if [ ! -f ~/.ssh/k8s/id_rsa ]; then
    SSH_ID=$(doctl -u "${API_ENDPOINT}" compute ssh-key list | grep "k8s-ssh" | cut -d' ' -f1)
    if [ -n "${SSH_ID}" ]; then
        SSH_KEY=$(doctl -u "${API_ENDPOINT}" compute ssh-key get "${SSH_ID}" --format FingerPrint --no-header)
    fi
    if [ -n "${SSH_KEY}" ]; then
        doctl -u "${API_ENDPOINT}" compute ssh-key delete "${SSH_KEY}" -f
    fi
fi

# name of the master
MASTER_NAME=${MASTER_NAME:-master}
NODE_NAME=${NODE_NAME:-node}

API_ENDPOINT=${API_ENDPOINT:-https://api.digitalocean.com/}

echo "- Destroying the droplets"
# delete the droplets
doctl -u "${API_ENDPOINT}" compute droplet delete --tag-name=k8s-master
doctl -u "${API_ENDPOINT}" compute droplet delete --tag-name=k8s-node

echo "- Destroying the tags"
# delete the tags
doctl -u "${API_ENDPOINT}" compute tag delete -f k8s-master
doctl -u "${API_ENDPOINT}" compute tag delete -f k8s-node

echo "- Destroying the load balancer"
LB_ID=$(doctl -u "${API_ENDPOINT}" compute load-balancer list | grep "k8s-monitoring" | cut -d' ' -f1)
if [ -n "${LB_ID}" ]; then
    doctl -u "${API_ENDPOINT}" compute load-balancer delete "${LB_ID}" -f
fi

echo "- Destroying the node firewall"
FW_ID=$(doctl -u "${API_ENDPOINT}" compute firewall list | grep "k8s-nodes" | cut -d' ' -f1)
if [ -n "${FW_ID}" ]; then
    doctl -u "${API_ENDPOINT}" compute firewall delete "${FW_ID}" -f
fi

echo "- Destroying the master firewall"
FW_ID=$(doctl -u "${API_ENDPOINT}" compute firewall list | grep "k8s-master" | cut -d' ' -f1)
if [ -n "${FW_ID}" ]; then
    doctl -u "${API_ENDPOINT}" compute firewall delete "${FW_ID}" -f
fi

echo "- Destroy completed"
